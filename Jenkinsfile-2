pipeline {
    agent { label 'Server_Docker' }
    tools {
        maven 'Maven'
    }
    stages {
       stage('run docker compose') {
                                     steps {
                                           sh '''#!/bin/bash
                                               echo "running docker compose"
                                               sudo docker-compose up -d
                                           '''
                                           }
              }

       stage('integration tests') {
                              steps {
                                       sh '''#!/bin/bash
                                         echo "starts running integration testing"
                                         mvn -pl hospital-main -Pfailsafe verify
                                       '''
                              }
       }


       stage('sonarqube verify') {
                        steps {
                                  withSonarQubeEnv('SonarQube') {
                                   sh '''#!/bin/bash
                                     echo "verify by sonarqube"
                                     mvn clean verify sonar:sonar
                                   '''
                                     }

                        }
       }

       stage('sonarqube quality gate') {
                                 steps {
                                        timeout(time: 1, unit: 'HOURS') {
                                        waitForQualityGate abortPipeline: true
                                                       }
                                 }
       }

       stage('functional cucumber tests') {
                                 steps {
                                       sh '''#!/bin/bash
                                          echo "starts running functional testing"
                                          mvn -pl hospital-functional-tests -DskipTests=false -Dtest=RunnerTest test
                                       '''
                                 }
       }
    }

     post {
             always {
                    sh '''#!/bin/bash
                      sudo docker-compose down
                      sudo docker rmi alekckorsh/hospital
                      sudo docker rmi postgres
                   '''

                 }
        }
}
